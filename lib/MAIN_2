import 'package:flutter/material.dart';
import 'package:uddoktapay/models/customer_model.dart';
import 'package:uddoktapay/models/request_response.dart';
import 'package:uddoktapay/uddoktapay.dart';
import 'package:uddoktapay/widget/custom_snackbar.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _phone = TextEditingController();
  final _name = TextEditingController();
  final _amount = TextEditingController();
  final _key = GlobalKey<FormState>();

  @override
  void dispose() {
    _phone.dispose();
    _name.dispose();
    _amount.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Uddoktapay Example'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(15.0),
          child: Form(
            key: _key,
            child: Column(
              children: [
                TextFormField(
                  validator: (p0) {
                    if (p0!.isEmpty) {
                      return 'Field is required';
                    }
                    return null;
                  },
                  controller: _name,
                  decoration: const InputDecoration(
                    hintText: 'Full Name',
                  ),
                ),
                const SizedBox(
                  height: 5,
                ),
                TextFormField(
                  validator: (p0) {
                    if (p0!.isEmpty) {
                      return 'Field is required';
                    }
                    return null;
                  },
                  controller: _amount,
                  decoration: const InputDecoration(
                    hintText: 'Amount',
                  ),
                ),
                const SizedBox(
                  height: 15,
                ),
                TextFormField(
                  validator: (p0) {
                    if (p0!.isEmpty) {
                      return 'Field is required';
                    }
                    return null;
                  },
                  controller: _phone,
                  decoration: const InputDecoration(
                    hintText: 'Email',
                  ),
                ),
                const SizedBox(
                  height: 15,
                ),
                ElevatedButton(
                  onPressed: () async {
                    if (_key.currentState!.validate()) {
                      try {
                        final response = await UddoktaPay.createPayment(
                          context: context,
                          customer: CustomerDetails(
                            fullName: _name.text,
                            cusPhone: _phone.text,
                          ),
                          amount: _amount.text,
                        );

                        if (response.status == ResponseStatus.completed) {
                          // handle on complete
                          snackBar('Success. TRX_ID ${response.invoiceId}', context);
                        } else if (response.status == ResponseStatus.canceled) {
                          // handle on cancel
                          snackBar('Payment Canceled', context);
                        } else if (response.status == ResponseStatus.pending) {
                          // handle on pending
                          snackBar('Payment Pending', context);
                        }
                      } catch (e) {
                        // handle exception
                        snackBar('An error occurred: $e', context);
                      }
                    }
                  },
                  child: const Text('Make Payment'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
